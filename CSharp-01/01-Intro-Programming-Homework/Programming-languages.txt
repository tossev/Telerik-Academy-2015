=== 1. Java ===
	
	Java is a class-based, object-oriented programming language developed by Sun Microsystems in the 1990s. It's one of the most in-demand programming languages, a standard for enterprise software, web-based content, games and mobile apps, as well as the Android operating system. Java is designed to work across multiple software platforms, meaning a program written on Mac OS X, for example, could also run on Windows.

	--- Similarities and differences ---

		- Java requires that a source file name must match the only public class inside it, while C# allows multiple public classes in the same file.
		- Java does not include operator overloading, because abuse of operator overloading can lead to code that is harder to understand and debug. C# allows operator overloading, which, when used carefully, can make code terser and more readable. Java's lack of overloading makes it somewhat unsuited for certain mathematical programs.
		- There are no unsigned primitive numeric types in Java. While it is universally agreed that mixing signed and unsigned variables in code is bad, Java's lack of support for unsigned numeric types makes it somewhat unsuited for low-level programming.

=== 2.  C Language ===
	
	A general-purpose, imperative programming language developed in the early '70s, C is the oldest and most widely used language, providing the building blocks for other popular languages, such as C#, Java, JavaScript and Python. C is mostly used for implementing operating systems and embedded applications.

=== 3. Objective-C ===

	 Objective-C is a general-purpose, object-oriented programming language used by the Apple operating system. It powers Apple's OS X and iOS, as well as its APIs, and can be used to create iPhone apps, which has generated a huge demand for this once-outmoded programming language.

	--- Similarities and differences ---

		- Just as C# is tightly coupled with .NET, Objective-C is tightly coupled with Cocoa.
		- One of the best parts of Objective-C is the dynamic nature — rather than calling methods, you send messages, which the runtime routes dynamically. Combined (judiciously) with dynamic typing, this can make a lot of powerful patterns simpler or even trivial to implement.

=== 4. PHP ===

	PHP (Hypertext Processor) is a free, server-side scripting language designed for dynamic websites and app development. It can be directly embedded into an HTML source document rather than an external file, which has made it a popular programming language for web developers.

	--- Similarities and differences ---

		- PHP Logic: PHP generates directly the HTML / JS / CSS used to compose the page and produce the end HTML page directly from the code or if you are smart enough using things like templates engines. You must know HTML at least to be able to develop PHP web sites.
		- C# Logic: You compose your page out of "web components" which are aware of their state and can fire events like "button click". Once a event is fired, your C# logic (no HTML / JS here) will change the state of the page components or add new one on the fly. Components are then invoked by the framework to render themselves. You don't have to know anything to HTML to be able to code.
		- PHP templates: By default PHP doesn't make any separation between the look and the logic. So either you use additional packages or write yourself some sort of template engine. If not then you will have an hard time to change the look (beside changing CSS files).
		- C# templates: The logic code is separated from the presentation code. The presentation code is nearly a pure HTML code with some additional tags for the controls. The logic on the other side is a pure cs file (C# file) and is compiled to produce a .dll file.
		- PHP performances: PHP is an interpreted language. Sure you can use some accelerators but still it remains a slow interpreted language. For most web pages it is fine, but as soon as you want to produce images on the fly or yet do some more complex operations PHP will start to use a lot of CPU and time.
		- C# performances: Performances varies between Linux and Windows machines. On Linux the performances are still like 10x the one of a PHP equivalent, but not yet really fast. On windows C# is nearly as fast as pure C++ code.

=== 5. Python ===

	 Python is a high-level, server-side scripting language for websites and mobile apps. It's considered a fairly easy language for beginners due to its readability and compact syntax, meaning developers can use fewer lines of code to express a concept than they would in other languages.

	--- Similarities and differences ---

		- Python is winner in: ease of learning, cross platform development, availability of open source libraries.
		- C# is winner in: standard library, language features, development process and tools, performance, language evolution speed.
		- Roughly even: syntax (Python is better in readability, C# has more consistent syntax), adoption.
		- In Python, once you install a module, you can import it easily from anywhere. In C# on the other hand, some assemblies (read, modules for all practical purposes), are located in different directories and the compiler will need to be told explicitly about that.



